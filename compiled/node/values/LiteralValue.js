// Generated by CoffeeScript 1.8.0
(function() {
  var LiteralValue, Value,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Value = require("./Value");

  module.exports = LiteralValue = (function(_super) {
    __extends(LiteralValue, _super);

    LiteralValue.literalValue = function(value) {
      return new LiteralValue(value);
    };

    function LiteralValue(value) {
      this.value = value;
    }

    LiteralValue.prototype.toMGLValue = function() {
      return this.value;
    };

    LiteralValue.prototype.toLiteralValue = function() {
      return this.value;
    };

    return LiteralValue;

  })(Value);

}).call(this);
