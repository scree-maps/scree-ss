// Generated by CoffeeScript 1.8.0
(function() {
  var ColorValue, Value, assert, _;

  Value = require("./Value");

  _ = require('../utilities');

  assert = require("assert");

  module.exports = ColorValue = (function() {
    var unwrap;

    unwrap = function(value) {
      return value.toLiteralValue();
    };

    ColorValue.hex = function(hex) {
      var b, g, r, _ref;
      _ref = _.hex2rgb(hex), r = _ref[0], g = _ref[1], b = _ref[2];
      return new ColorValue(r, g, b, 1);
    };

    ColorValue.hsva = function(h, s, v, a) {
      var b, g, r, _ref;
      _ref = _.hsv2rgb(unwrap(h), unwrap(s), unwrap(v)), r = _ref[0], g = _ref[1], b = _ref[2];
      return new ColorValue(r, g, b, a);
    };

    ColorValue.hsla = function(h, s, l, a) {
      var b, g, r, _ref;
      _ref = _.hsl2rgb(unwrap(h), unwrap(s), unwrap(l)), r = _ref[0], g = _ref[1], b = _ref[2];
      return new ColorValue(r, g, b, a);
    };

    ColorValue.rgba = function(red, green, blue, alpha) {
      return new ColorValue(unwrap(red), unwrap(green), unwrap(blue), unwrap(alpha));
    };

    function ColorValue(red, green, blue, alpha) {
      this.red = red;
      this.green = green;
      this.blue = blue;
      this.alpha = alpha;
    }

    ColorValue.prototype.toMGLValue = function(options) {
      assert(!options.filter);
      return "rgba(" + this.red + ", " + this.green + ", " + this.blue + ", " + this.alpha + ")";
    };

    return ColorValue;

  })();

}).call(this);
