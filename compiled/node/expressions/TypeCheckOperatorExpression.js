// Generated by CoffeeScript 1.8.0
(function() {
  var AttributeReferenceValue, Expression, TypeCheckExpression, assert, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Expression = require("./Expression");

  AttributeReferenceValue = require("../values/AttributeReferenceValue");

  _ = require("../utilities");

  assert = require("assert");

  module.exports = TypeCheckExpression = (function(_super) {
    __extends(TypeCheckExpression, _super);

    function TypeCheckExpression(type) {
      this.type = type;
    }

    TypeCheckExpression.prototype.toMGLFilter = function(scope, options) {
      return ["==", "$type", this.type.toMGLValue(scope, options)];
    };

    return TypeCheckExpression;

  })(Expression);

}).call(this);
