// Generated by CoffeeScript 1.8.0
(function() {
  var AttributeReferenceValue, BooleanLogicExpression, Expression, assert, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Expression = require("./Expression");

  AttributeReferenceValue = require("../values/AttributeReferenceValue");

  _ = require("../utilities");

  assert = require("assert");

  module.exports = BooleanLogicExpression = (function(_super) {
    __extends(BooleanLogicExpression, _super);

    BooleanLogicExpression.prototype.operators = {
      "||": "any",
      "&&": "all"
    };

    function BooleanLogicExpression(operator, expressions) {
      this.operator = operator;
      this.expressions = expressions;
    }

    BooleanLogicExpression.prototype.toMGLFilter = function(scope, options) {
      options = _.extend({
        filter: true
      }, options);
      return [this.operators[this.operator]].concat(_.map(this.expressions, function(expression) {
        return expression.toMGLFilter(scope, options);
      }));
    };

    return BooleanLogicExpression;

  })(Expression);

}).call(this);
