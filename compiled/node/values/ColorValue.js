// Generated by CoffeeScript 1.8.0
(function() {
  var ColorValue, Value, assert, _;

  Value = require("./Value");

  _ = require('../utilities');

  assert = require("assert");

  module.exports = ColorValue = (function() {
    var unwrap;

    unwrap = function(value) {
      return value.toLiteralValue();
    };

    ColorValue.hex = function(hex) {
      var blue, green, red, _ref;
      _ref = _.hex2rgb(hex), red = _ref[0], green = _ref[1], blue = _ref[2];
      return new ColorValue(red, green, blue, 1);
    };

    ColorValue.hsva = function(hue, saturation, value, alpha) {
      var blue, green, red, _ref;
      _ref = _.hsv2rgb(unwrap(hue), unwrap(saturation), unwrap(value)), red = _ref[0], green = _ref[1], blue = _ref[2];
      return new ColorValue(red, green, blue, alpha);
    };

    ColorValue.hsla = function(hue, saturation, lightness, alpha) {
      var blue, green, red, _ref;
      _ref = _.hsl2rgb(unwrap(hue), unwrap(saturation), unwrap(lightness)), red = _ref[0], green = _ref[1], blue = _ref[2];
      return new ColorValue(red, green, blue, alpha);
    };

    ColorValue.rgba = function(red, green, blue, alpha) {
      return new ColorValue(unwrap(red), unwrap(green), unwrap(blue), unwrap(alpha));
    };

    function ColorValue(red, green, blue, alpha) {
      this.red = red;
      this.green = green;
      this.blue = blue;
      this.alpha = alpha;
    }

    ColorValue.prototype.toMGLValue = function(options) {
      assert(!options.filter);
      return "rgba(" + this.red + ", " + this.green + ", " + this.blue + ", " + this.alpha + ")";
    };

    return ColorValue;

  })();

}).call(this);
