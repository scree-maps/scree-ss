// Generated by CoffeeScript 1.8.0
(function() {
  var ArrayValue, AttributeReferenceValue, Expression, SetOperatorExoression, Value, assert, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Expression = require("./Expression");

  ArrayValue = require("../values/ArrayValue");

  AttributeReferenceValue = require("../values/AttributeReferenceValue");

  _ = require("../utilities");

  assert = require("assert");

  Value = require('../values/Value');

  module.exports = SetOperatorExoression = (function(_super) {
    __extends(SetOperatorExoression, _super);

    function SetOperatorExoression(left, operator, right) {
      this.left = left;
      this.operator = operator;
      this.right = right;
    }

    SetOperatorExoression.prototype.toMGLFilter = function(scope, options) {
      var lvalue, rvalue;
      lvalue = this.left.toValue(scope, options);
      rvalue = this.right.toValue(scope, options);
      assert(lvalue instanceof AttributeReferenceValue);
      assert(rvalue instanceof ArrayValue);
      return [this.operator, lvalue.name].concat(Value.toMGLValue(rvalue, options));
    };

    return SetOperatorExoression;

  })(Expression);

}).call(this);
