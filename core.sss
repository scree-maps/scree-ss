include(file) = `
  var includeeScope = Scope.createFromFile(file());
  var includerScope = scope.parent;
  includerScope.macros = includerScope.macros.concat(includeeScope.macros);
  new ScopeValue(includeeScope);
`

identity (value) = value

range(start, stop, step) = `_.range(start(), stop(), step())`

hsva(hue, saturation, value, alpha = 1) = `ColorValue.hsla(hue(), saturation(), value(), alpha())`
hsla(hue, saturation, lightness, alpha = 1) = `ColorValue.hsla(hue(), saturation(), lightness(), alpha())`
rgba(red, green, blue, alpha = 1) = `ColorValue.rgba(red(), green(), blue(), alpha())`

color-mix(a, b, ratio = 0.5) = rgba(
  red:   a.red * ratio + b.red * (1 - ratio)
  green: a.green * ratio + b.green * (1 - ratio)
  blue:  a.blue * ratio + b.blue * (1 - ratio)
  alpha: a.alpha * ratio + b.alpha * (1 - ratio)
)

function(*) = `FunctionValue.fromArguments(arguments())`

background = "background"
fill = "fill"
line = "line"
symbol = "symbol"
raster = "raster"
vector = "vector"
raster = "raster"
point = "point"
line = "line"
bevel = "bevel"
round = "round"
miter = "miter"
butt = "butt"
round = "round"
square = "square"

source(url, layer) = {
  source(vector url layer)
}

source(type, url, layer) = {
  source-type: type
  source-url: url
  source-layer: layer
}

hillshade(color = #000, opacity = 0.15) = {

  levels = [94 90 89 78 67 56]

  for level in levels {
    # {
      type: fill
      source("mapbox://mapbox.mapbox-terrain-v2" "hillshade")
      filter: level == @level
      fill-color: color
      fill-opacity: opacity * level / 100
    }
  }
}

contours(minor-width = 1, major-width = 1.5, opacity = 0.2, color = #333, index = 5) = {

  # {
    source("mapbox://mapbox.mapbox-terrain-v2" "contour")
    type: line
    line-opacity: opacity
    line-width: minor-width
    line-color: color
  }

  # {
    source("mapbox://mapbox.mapbox-terrain-v2" "contour")
    type: line
    line-opacity: opacity
    line-width: major-width
    line-color: color
    filter: @index == index
  }

}
