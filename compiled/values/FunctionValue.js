// Generated by CoffeeScript 1.8.0
(function() {
  var FunctionValue, Value, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Value = require("./Value");

  _ = require("../utilities");

  module.exports = FunctionValue = (function(_super) {
    __extends(FunctionValue, _super);

    function FunctionValue(base, stops) {
      this.stops = _.map(stops, function(stop) {
        return [stop[0], stop[1].toMGLValue()];
      });
      this.base = base != null ? base.toMGLValue() : void 0;
    }

    FunctionValue.prototype.toMGLValue = function(options) {
      if (this.base) {
        return {
          base: this.base,
          stops: this.stops
        };
      } else {
        return {
          stops: this.stops
        };
      }
    };

    return FunctionValue;

  })(Value);

}).call(this);
